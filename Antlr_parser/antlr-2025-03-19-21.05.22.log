2025-03-19 21:05:22:685 grammar LogManager.java:25 load calc_antlrLexerRules from calc_antlr.g4
2025-03-19 21:05:22:685 grammar LogManager.java:25 before: (COMBINED_GRAMMAR calc_antlr (import calc_antlrLexerRules) (RULES (RULE calc (BLOCK (ALT withDecl ':' expr ';'))) (RULE expr (BLOCK (ALT term (* (BLOCK (ALT (BLOCK (ALT Plus) (ALT Minus)) term)))))) (RULE factor (BLOCK (ALT ident) (ALT number) (ALT '(' expr ')'))) (RULE term (BLOCK (ALT factor (* (BLOCK (ALT (BLOCK (ALT Star) (ALT Slash)) factor)))))) (RULE withDecl (BLOCK (ALT With ident (* (BLOCK (ALT ',' ident)))))) (RULE ident (BLOCK (ALT (+ (BLOCK (ALT Nondigit)))))) (RULE number (BLOCK (ALT (+ (BLOCK (ALT Digit))))))))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported actions: []
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Nondigit (BLOCK (ALT (BLOCK (ALT [a-zA-Z])))))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Digit (BLOCK (ALT (BLOCK (ALT [0-9])))))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Minus (BLOCK (ALT '-')))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Plus (BLOCK (ALT '+')))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Star (BLOCK (ALT '*')))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE Slash (BLOCK (ALT '/')))
2025-03-19 21:05:22:685 grammar LogManager.java:25 imported rule: (RULE With (BLOCK (ALT (BLOCK (ALT [wW] [iI] [tT] [hH])))))
2025-03-19 21:05:22:685 grammar LogManager.java:25 Grammar: (COMBINED_GRAMMAR calc_antlr (import calc_antlrLexerRules) (RULES (RULE calc (BLOCK (ALT withDecl ':' expr ';'))) (RULE expr (BLOCK (ALT term (* (BLOCK (ALT (BLOCK (ALT Plus) (ALT Minus)) term)))))) (RULE factor (BLOCK (ALT ident) (ALT number) (ALT '(' expr ')'))) (RULE term (BLOCK (ALT factor (* (BLOCK (ALT (BLOCK (ALT Star) (ALT Slash)) factor)))))) (RULE withDecl (BLOCK (ALT With ident (* (BLOCK (ALT ',' ident)))))) (RULE ident (BLOCK (ALT (+ (BLOCK (ALT Nondigit)))))) (RULE number (BLOCK (ALT (+ (BLOCK (ALT Digit)))))) (RULE Nondigit (BLOCK (ALT (BLOCK (ALT [a-zA-Z]))))) (RULE Digit (BLOCK (ALT (BLOCK (ALT [0-9]))))) (RULE Minus (BLOCK (ALT '-'))) (RULE Plus (BLOCK (ALT '+'))) (RULE Star (BLOCK (ALT '*'))) (RULE Slash (BLOCK (ALT '/'))) (RULE With (BLOCK (ALT (BLOCK (ALT [wW] [iI] [tT] [hH])))))))
2025-03-19 21:05:22:700 grammar LogManager.java:25 after: (COMBINED_GRAMMAR calc_antlr (import calc_antlrLexerRules) (RULES (RULE calc (BLOCK (ALT withDecl ':' expr ';'))) (RULE expr (BLOCK (ALT term (* (BLOCK (ALT (SET Plus Minus) term)))))) (RULE factor (BLOCK (ALT ident) (ALT number) (ALT '(' expr ')'))) (RULE term (BLOCK (ALT factor (* (BLOCK (ALT (SET Star Slash) factor)))))) (RULE withDecl (BLOCK (ALT With ident (* (BLOCK (ALT ',' ident)))))) (RULE ident (BLOCK (ALT (+ (BLOCK (ALT Nondigit)))))) (RULE number (BLOCK (ALT (+ (BLOCK (ALT Digit)))))) (RULE Nondigit (BLOCK (ALT (BLOCK (ALT [a-zA-Z]))))) (RULE Digit (BLOCK (ALT (BLOCK (ALT [0-9]))))) (RULE Minus (BLOCK (ALT '-'))) (RULE Plus (BLOCK (ALT '+'))) (RULE Star (BLOCK (ALT '*'))) (RULE Slash (BLOCK (ALT '/'))) (RULE With (BLOCK (ALT (BLOCK (ALT [wW] [iI] [tT] [hH])))))))
2025-03-19 21:05:22:716 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR calc_antlr (import calc_antlrLexerRules) (RULES (RULE calc (BLOCK (ALT withDecl ':' expr ';'))) (RULE expr (BLOCK (ALT term (* (BLOCK (ALT (SET Plus Minus) term)))))) (RULE factor (BLOCK (ALT ident) (ALT number) (ALT '(' expr ')'))) (RULE term (BLOCK (ALT factor (* (BLOCK (ALT (SET Star Slash) factor)))))) (RULE withDecl (BLOCK (ALT With ident (* (BLOCK (ALT ',' ident)))))) (RULE ident (BLOCK (ALT (+ (BLOCK (ALT Nondigit)))))) (RULE number (BLOCK (ALT (+ (BLOCK (ALT Digit))))))))
2025-03-19 21:05:22:716 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR calc_antlrLexer (RULES (RULE T__0 (BLOCK (ALT ':'))) (RULE T__1 (BLOCK (ALT ';'))) (RULE T__2 (BLOCK (ALT '('))) (RULE T__3 (BLOCK (ALT ')'))) (RULE T__4 (BLOCK (ALT ','))) (RULE Nondigit (BLOCK (ALT (BLOCK (ALT [a-zA-Z]))))) (RULE Digit (BLOCK (ALT (BLOCK (ALT [0-9]))))) (RULE Minus (BLOCK (ALT '-'))) (RULE Plus (BLOCK (ALT '+'))) (RULE Star (BLOCK (ALT '*'))) (RULE Slash (BLOCK (ALT '/'))) (RULE With (BLOCK (ALT (BLOCK (ALT [wW] [iI] [tT] [hH])))))))
2025-03-19 21:05:22:862 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, Nondigit=6, Digit=7, Minus=8, Plus=9, Star=10, Slash=11, With=12}
2025-03-19 21:05:22:862 semantics LogManager.java:25 strings={':'=1, ';'=2, '('=3, ')'=4, ','=5, '-'=8, '+'=9, '*'=10, '/'=11}
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 0 in rule expr
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[{8..9}, {2, 4}]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 1 in rule factor
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[6, 7, 3]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 2 in rule term
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[{10..11}, {2, 4, 8..9}]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 3 in rule withDecl
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[5, 1]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 4 in rule ident
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[6, {1..2, 4..5, 8..11}]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
2025-03-19 21:05:22:868 LL1 LogManager.java:25 
DECISION 5 in rule number
2025-03-19 21:05:22:868 LL1 LogManager.java:25 look=[7, {2, 4, 8..11}]
2025-03-19 21:05:22:868 LL1 LogManager.java:25 LL(1)? true
